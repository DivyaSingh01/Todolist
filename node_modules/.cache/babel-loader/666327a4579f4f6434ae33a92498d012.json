{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash\\\\Desktop\\\\todolist\\\\src\\\\components\\\\Todoform.js\",\n    _s = $RefreshSig$();\n\nimport Reac, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Todoform(props) {\n  _s();\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"update your item\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \"update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a todo\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \"Add todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todoform, \"Zz9RrNas3n7wfThZAB1gXOvJ9+8=\");\n\n_c = Todoform;\nexport default Todoform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todoform\");","map":{"version":3,"sources":["C:/Users/yash/Desktop/todolist/src/components/Todoform.js"],"names":["Reac","useState","useEffect","useRef","Todoform","props","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;AAAA,OAAOA,IAAP,IAAcC,QAAd,EAAwBC,SAAxB,EAAmCC,MAAnC,QAAgD,OAAhD;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBN,QAAQ,CAACI,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAA8B,EAA/B,CAAjC;AAEA,QAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACH,GAFQ,CAAT;;AAIA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBP,IAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMO,YAAY,GAAGF,CAAC,IAAG;AACrBA,IAAAA,CAAC,CAACG,cAAF;AAEAZ,IAAAA,KAAK,CAACa,QAAN,CAAe;AACXC,MAAAA,EAAE,EAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,KAAzB,CADQ;AAEXC,MAAAA,IAAI,EAAEjB;AAFK,KAAf;AAKAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AAEH,GAVD;;AAYA,sBACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAES,YAAtC;AAAA,cACIX,KAAK,CAACG,IAAN,gBACA;AAAA,8BACG;AACH,QAAA,IAAI,EAAC,MADF;AAEH,QAAA,WAAW,EAAC,kBAFT;AAGH,QAAA,KAAK,EAAEF,KAHJ;AAIH,QAAA,IAAI,EAAC,MAJF;AAKH,QAAA,SAAS,EAAC,YALP;AAMH,QAAA,QAAQ,EAAEO,YANP;AAOH,QAAA,GAAG,EAAEH;AAPF;AAAA;AAAA;AAAA;AAAA,cADH,eAUA;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVA;AAAA,oBADA,gBAiBA;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACJ,QAAA,WAAW,EAAC,YADR;AAEJ,QAAA,KAAK,EAAEJ,KAFH;AAGJ,QAAA,IAAI,EAAC,MAHD;AAIJ,QAAA,SAAS,EAAC,YAJN;AAKJ,QAAA,QAAQ,EAAEO,YALN;AAMJ,QAAA,GAAG,EAAEH;AAND;AAAA;AAAA;AAAA;AAAA,cADJ,eAUA;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVA;AAAA;AAlBJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH;;GAhEQN,Q;;KAAAA,Q;AAkET,eAAeA,QAAf","sourcesContent":["import Reac, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction Todoform(props) {\r\n    const [input, setInput] =useState(props.edit ? props.edit.value:'');\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(()=>{\r\n        inputRef.current.focus()\r\n    })\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        \r\n        props.onSubmit({\r\n            id:Math.floor(Math.random()*10000),\r\n            text: input\r\n        });\r\n\r\n        setInput('');\r\n    \r\n    }\r\n\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n           {props.edit ? ( \r\n            <>   \r\n               <input \r\n            type='text' \r\n            placeholder='update your item' \r\n            value={input}\r\n            name='text'\r\n            className='todo-input' \r\n            onChange={handleChange}\r\n            ref={inputRef} \r\n            />\r\n            <button className=\"todo-button\">update</button>\r\n            </>\r\n            ):\r\n            \r\n            \r\n            ( \r\n            <>    \r\n                <input type=\"text\" \r\n            placeholder=\"Add a todo\" \r\n            value={input}\r\n            name=\"text\"\r\n            className=\"todo-input\" \r\n            onChange={handleChange}\r\n            ref={inputRef} \r\n            />\r\n\r\n            <button className=\"todo-button\">Add todo</button>\r\n            </>\r\n            )}    \r\n\r\n\r\n           \r\n        \r\n        </form>\r\n       \r\n    )\r\n}\r\n\r\nexport default Todoform;\r\n"]},"metadata":{},"sourceType":"module"}