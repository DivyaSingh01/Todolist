{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash\\\\Desktop\\\\todolist\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Todoform from './Todoform';\nimport Todolist from './Todolist';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = ({\n  todos,\n  completeTodo,\n  removeTodo\n}) => {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = valure => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(Todoform, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this));\n};\n\n_s(Todo, \"Lk+zX9mM8RlzHTP2VTuh+tHke4Q=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/yash/Desktop/todolist/src/components/Todo.js"],"names":["React","useState","Todoform","Todolist","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","edit","setEdit","id","value","submitUpdate","valure","updateTodo","map","todo","index","isComplete","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,SAAQC,MAAR,QAAqB,gBAArB;;;AAGA,MAAMC,IAAI,GAAC,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAAD,KAAsC;AAAA;;AAE7C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAC7BW,IAAAA,EAAE,EAAE,IADyB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;;AAKA,QAAMC,YAAY,GAAGC,MAAM,IAAI;AAC3BC,IAAAA,UAAU,CAACN,IAAI,CAACE,EAAN,EAAUC,KAAV,CAAV;AACAF,IAAAA,OAAO,CAAE;AACLC,MAAAA,EAAE,EAAE,IADC;AAELC,MAAAA,KAAK,EAAE;AAFF,KAAF,CAAP;AAIH,GAND;;AAQA,MAAIH,IAAI,CAACE,EAAT,EAAa;AACT,wBAAO,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,IAAhB;AAAsB,MAAA,QAAQ,EAAEI;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,SAAOP,KAAK,CAACU,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACb;AACA,IAAA,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UADnD;AAAA,4BAKA;AAAoB,MAAA,OAAO,EAAE,MAAKZ,YAAY,CAACU,IAAI,CAACN,EAAN,CAA9C;AAAA,gBACKM,IAAI,CAACG;AADV,OAAWH,IAAI,CAACN,EAAhB;AAAA;AAAA;AAAA;AAAA,YALA,eAQA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACA,QAAC,iBAAD;AACI,QAAA,OAAO,EAAE,MAAKH,UAAU,CAACS,IAAI,CAACN,EAAN,CAD5B;AAEI,QAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,cADA,eAKA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAKD,OAAO,CAAC;AAACC,UAAAA,EAAE,EAACM,IAAI,CAACN,EAAT;AAAaC,UAAAA,KAAK,EAAEK,IAAI,CAACG;AAAzB,SAAD,CAA7B;AACI,QAAA,SAAS,EAAC;AADd;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YARA;AAAA,KAEKF,KAFL;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAqBH,CAxCD;;GAAMb,I;;KAAAA,I;AA0CN,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport Todoform from './Todoform';\r\nimport Todolist from './Todolist';\r\nimport {RiCloseCircleLine} from 'react-icons/ri'\r\nimport {TiEdit} from 'react-icons/ti'\r\n\r\n\r\nconst Todo=({todos, completeTodo, removeTodo})=> {\r\n\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = valure => {\r\n        updateTodo(edit.id, value)\r\n        setEdit ({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <Todoform edit={edit} onSubmit={submitUpdate}/>;\r\n    }\r\n\r\n    return todos.map((todo, index) =>(\r\n        <div \r\n        className={todo.isComplete ? 'todo-row complete' : 'todo-row'} \r\n        key={index}\r\n        >\r\n\r\n        <div key ={todo.id} onClick={()=> completeTodo(todo.id)}>\r\n            {todo.text}\r\n        </div>\r\n        <div className=\"icons\">\r\n        <RiCloseCircleLine\r\n            onClick={()=> removeTodo(todo.id)}\r\n            className='delete-icom' \r\n        />\r\n        <TiEdit onClick={()=> setEdit({id:todo.id, value: todo.text})}\r\n            className='edit-icom' \r\n        />\r\n\r\n        </div>\r\n        </div>\r\n    ));\r\n};\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}